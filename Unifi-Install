#!/bin/bash

#Get the name First ethernet interface listed in ifconfig and current network settings
eth_interface=$(cat /etc/network/interfaces | grep -m 1 ens | awk '{print $2}' )
DHCP_IP=$(ifconfig $eth_interface | grep -w inet | grep -v 127.0.0.1| awk '{print $2}' | cut -d ":" -f 2 )
DHCP_SUBNET=$(ifconfig $eth_interface | grep -w inet |grep -v 127.0.0.1| awk '{print $4}' | cut -d ":" -f 2 )
DHCP_GATEWAY=$(ip route list dev $eth_interface | awk ' /^default/ {print $3}' )

#Backup the network config
cp /etc/network/interfaces ~/Backup-Network-Configs.txt

###########<<<<<<<<FUNCTIONS>>>>>>>###########

isAlive() #Takes an IP Address and sees if it is alive or not
{
A=$(ping -c 4 $1 | grep Unreach | wc -l )
if [ "$A" != "0" ]; then
 echo "0" #ip is available
else
 echo "1" #Ip is alive
fi
}

#Gather user Preferences for the Network
echo
echo
echo "Configuring Static Network settings:"
echo
echo
echo "Current Network Settings:"
echo "IP ADDRESS: $DHCP_IP"
echo "SUBNET MASK: $DHCP_SUBNET"
echo "DEFAULT GATEWAY: $DHCP_GATEWAY"
echo
echo
read -p "Would you like to accept these settings and assign them statically? ([y]/n)" choice
case "$choice" in
 y|Y|$response ) AUTO_IP="y";;
 n|N|* ) AUTO_IP="n";;
esac

#If the response is affirmative, skip to line 116. Otherwise, go to line 49
if [ "$AUTO_IP" =  "y" ]; then
IP=$DHCP_IP
SUBNET=$DHCP_SUBNET
GATE=$DHCP_GATEWAY
#echo $IP $SUBNET $GATE
else
#Ask for an IP ADDRESS
echo
echo
echo "What would you like your static IP ADDRESS to be?"
read IP

#Check to see if a valid IP ADDRESS was entered
validIP()
{
I=$IP

#if [ "$(ipcalc -cs $I && echo 1 || echo 0)" == 0 ]; then
#echo "That is not a valid IP Address. Please enter a valid IP Address:"
#read IP
#validIP
#return 0
#fi

if [[ "$I" =~ (([01]{,1}[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.([01]{,1}[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.([01]{,1}[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.([01]{,1}[0-9]{1,2}|2[0-4][0-9]|25[0-5]))$ ]]; then
  echo "Checking to see if this IP is in use..."
else
  echo "That is not a valid IP Address. Please enter a valid IP Address:"
  read IP
  validIP
  return 0
fi

if [ "$(isAlive $I)" == "1" ] && [ "$I" != "$DHCP_IP" ]; then
 echo "That IP ADDRESS is already in use. Please enter a different one:"
 read IP
 validIP
 return 0
fi


}

validIP

echo 
echo "$IP is a valid IP ADDRESS"
echo


#Ask for a SUBNET MASK
echo "What is the SUBNET MASK of the network?"
read SUBNET

#Check to see if a valid SUBNET MASK was entered
validSUBNET()
{
I=$SUBNET
if [[ "$I" =~ (([01]{,1}[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.([01]{,1}[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.([01]{,1}[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.([01]{,1}[0-9]{1,2}|2[0-4][0-9]|25[0-5]))$ ]]; then
  echo "Valid IP Entered"
else
  echo "That is not a valid IP Address. Please enter a valid IP Address:"
  read SUBNET
  validSUBNET
  return 0
fi
}

validSUBNET

echo 
echo "$SUBNET will be the SUBNET MASK"
echo

#Ask for a Default Gateway
echo "What is the default gateway?"
read GATE

#Check to see if a valid Default Gateway was entered
validGATE()
{
I=$GATE
if [[ "$I" =~ (([01]{,1}[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.([01]{,1}[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.([01]{,1}[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.([01]{,1}[0-9]{1,2}|2[0-4][0-9]|25[0-5]))$ ]]; then
  echo "Valid IP Entered"
else
  echo "That is not a valid IP Address. Please enter a valid IP Address:"
  read GATE
  validGATE
  return 0
fi
}

validGATE

echo 
echo "$GATE will be the Default Gateway"
echo
fi #Line 42


echo
#Ask for a Primary DNS Server
echo "What is the Primary DNS Server? (If you plan on joining a Domain, use the Primary DNS server of the Domain Controller.)"
read DNS1

#Check to see if a valid Primary DNS Server was entered
validDNS1()
{
I=$DNS1
if [[ "$I" =~ (([01]{,1}[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.([01]{,1}[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.([01]{,1}[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.([01]{,1}[0-9]{1,2}|2[0-4][0-9]|25[0-5]))$ ]]; then
  echo "Valid IP Entered"
else
  echo "That is not a valid IP Address. Please enter a valid IP Address:"
  read DNS1
  validDNS1
  return 0
fi
}

validDNS1

echo 
echo "$DNS1 will be the Primary DNS Server"
echo

#Ask for a Hostname
echo "Please enter a Hostname for this Server. WARNING: Whatever you enter WILL be accepted."
read HOST
echo
echo
echo "Applying your settings..."
echo
#Configure static IP
cat <<EOF > /etc/network/interfaces
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5),

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
auto $eth_interface
iface $eth_interface inet static
      address $IP
      netmask $SUBNET
      dns-nameservers $DNS1
      gateway $GATE
EOF

#Edit the hostname
hostname $HOST

echo
echo



echo 'Adding Unifi Source List...'
echo 'deb http://www.ubnt.com/downloads/unifi/debian stable ubiquiti' | sudo tee /etc/apt/sources.list.d/100-ubnt-unifi.list
echo
echo
echo 'Downloading and Installing Trusted Key'
sudo wget -O /etc/apt/trusted.gpg.d/unifi-repo.gpg https://dl.ubnt.com/unifi/unifi-repo.gpg 
echo
echo
echo
echo 'Updating Repos'
sudo apt-get update 
echo 'Installing Unifi Controller'
sudo apt-get install unifi -y
echo Unifi Server is now installed. After a reboot, you can Access the Controller via https://$IP:8443
echo 'Manually run discovery by entering the following command: java -jar /usr/lib/unifi/lib/ace.jar discovery'
echo
read -p "The server must now reboot. Press enter to continue...."
shutdown -r now
